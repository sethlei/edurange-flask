# This is a basic workflow to help you get started with Actions

name: Send_box

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  vagrant-up:
    runs-on: macos-12
    env:
      BRANCH_NAME: "master"
    steps:
      # https://github.com/ucb-bar/chipyard/pull/1156/commits/695eab80bd83f8545d445d6c14bd2d5d04dc09af
      - name: Delete old checkout
        run: |
            ls -alh .
            rm -rf ./* || true
            rm -rf ./.* || true
            ls -alh .

      - name: checkout Vagrant from repository
        uses: actions/checkout@master
        with: 
          repository: sethlei/edurange-flask
          submodules: recursive

      - name: clean submodules
        run: git submodule foreach git clean -xdf

      - name: ls1
        run: ls -Al

      - name: cd
        run: cd ./edurange-vagrant

      - name: ls2
        run: ls -Al
      - name: flush test
        run: echo 'test'
      - name: set unsafe
        shell: bash
        run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=TRUE" >> $GITHUB_ENV

# extract branch name -- https://www.techiediaries.com/get-current-branch-name-github-actions-github_ref-bash/
      # - name: Extract branch name
      #   if: github.event_name != 'pull_request'
      #   shell: bash
      #   #run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})"
      #   run: echo $BRANCH_NAME
      #   id: extract_branch
      #   env: 
      #     BRANCH_NAME: "master"

      # extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        #run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_HEAD_REF})"
        run: echo $BRANCH_NAME
        env:
          BRANCH_NAME: ${{github.ref}}
        shell: bash

      # print branch name
      - name: Get branch name
        run: echo 'The branch name is' $BRANCH_NAME
        shell: bash

      - name: replace branch name
        shell: bash
        run: cd ./edurange-vagrant && ls -Al && echo $BRANCH_NAME && sed -i '' "s/REPLACE_ME/$BRANCH_NAME/g" ./bootstrap.sh && cat ./bootstrap.sh && echo 'bn:' $BRANCH_NAME && ls -Al
        # env: 
        #   BRANCH_NAME=${GITHUB_HEAD_REF}

      - name: Show Vagrant version
        run: vagrant --version
        shell: bash

      - name: Run vagrant up
        run: cd ./edurange-vagrant && ls -Al && cat ./bootstrap.sh && echo $BRANCH_NAME && vagrant up
        shell: bash

      - name: Create box
        run: cd ./edurange-vagrant && vagrant package --output EDURANGEBOX.box && tar -czvf EDURANGEBOX.tar.gz EDURANGEBOX.box
        shell: bash

      - name: Get last version of box
        run: export EDU_VERSION=$(vagrant cloud box show edurange/$VagrantName | grep "Current Version" | awk '{ print $3 }') 
        shell: bash
        env:
          VagrantName="Edutest"

      - name: Increment box version
        run: export EDU_VERSION=$(awk -F. '/[0-9]+\./{$NF++;print}' OFS=. <<< "$EDU_VERSION")
        shell: bash

      - name: Create new version
        run: curl --header "Content-Type&#58; application/json" --header "Authorization&#58; Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_USER/$VAGRANT_NAME/versions --data '{ "version"&#58; { "version"&#58; $EDU_VERSION } }'
        shell: bash
        env:
          VAGRANT_NAME:"Edutest"
          VAGRANT_USER: ${{ secrets.VagrantUser }}
          VAGRANT_CLOUD_TOKEN: ${{ secrets.CloudToken }} 

      - name: Create new provider
        run: curl --header "Content-Type&#58; application/json" --header "Authorization&#58; Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_USER/$VAGRANT_NAME/version/$EDU_VERSION/providers --data '{ "provider"&#58; { "name"&#58; "virtualbox" } }'
        shell: bash
        env:
          VagrantName="Edutest"
          VAGRANT_USER: ${{ secrets.VagrantUser }}
          VAGRANT_CLOUD_TOKEN: ${{ secrets.CloudToken }} 

      - name: Get URL for upload
        run: export response=$(curl --header "Authorization&#58; Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_USER/$VAGRANT_NAME/version/$EDU_VERSION/provider/virtualbox/upload)
        shell: bash
        env:
          VagrantName="Edutest"
          VAGRANT_USER: ${{ secrets.VagrantUser }}
          VAGRANT_CLOUD_TOKEN: ${{ secrets.CloudToken }} 

      - name: Extract URL
        run: export upload_path=$(echo "$response" | jq .upload_path)
        shell: bash
        env:
          VagrantName="Edutest"
          VAGRANT_USER: ${{ secrets.VagrantUser }}
          VAGRANT_CLOUD_TOKEN: ${{ secrets.CloudToken }} 
      
      - name: Send box to the cloud
        run: curl $upload_path --request PUT --upload-file $EDURANGE_BOX
        shell: bash
      
      - name: Release the version after upload
        run: curl --header "Authorization&#58; Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_USER/$VAGRANT_NAME/version/$EDU_VERSION/release --request PUT
        shell: bash
        env:
          VagrantName="Edutest"
          VAGRANT_USER: ${{ secrets.VagrantUser }}
          VAGRANT_CLOUD_TOKEN: ${{ secrets.CloudToken }} 